#!/bin/bash

LABYRDIR="$HOME/.labyrinth/"
LABYRTERM="urxvt"
LABYRMU="urxvt -e cmus"
LABYRMPC="vimpc"
LABYRTERM2='xterm'
MUREMOTE="mpc"
LABYREDIT="$LABYRTERM2 -e vim"
LABYRGAL='nomacs'
LABYRDAW='reaper'
LABYRDAW2='bitwig-studio'
LABYRWEB='qutebrowser'
LABYRWAL='nitrogen'
LABYRMODE=$(cat ~/.config/sxhkd/current_mode)
LABYRFM="ranger"
WIDIR="$HOME/.widow"
MUCOL="$HOME/Music/collection/rnd/"

wideps() { # ignore this 
    case "$1" in
        "Gentoo")
            emerge -av sys-devel/base sys-devel/gcc sys-devel/make sys-devel/autoconf sys-devel/automake x11-libs/libX11 x11-libs/libXft x11-libs/libXinerama x11-base/xorg-server x11-apps/xinit
            ;;
        "Debian")
            sudo apt install build-essential libxi-dev libx11-dev libxft-dev libxfixes-dev libxtst-dev libxinerama-dev xorg-dev xinit git libgirepository1.0-dev libxkbcommon-dev gcc libcairo2-dev pkg-config python3-dev gir1.2-gtk-4.0 pipx
	    git clone https://github.com/rvaiya/warpd.git
	    cd warpd
	    make && sudo make install
	    [ $XDG_SESSION_TYPE = "wayland" ] && sudo apt install gtk-layer-shell grim && \
	    pipx ensurepath && \
	    pipx install git+https://github.com/AlfredoSequeida/hints.git
            ;;
        "Fedora")
            sudo dnf groupinstall "Development Tools" && sudo dnf install libX11-devel libXft-devel libXinerama-devel xorg-x11-server-Xorg xorg-x11-xinit git gcc gobject-introspection-devel cairo-gobject-devel pkg-config python3-devel gtk4 pipx pasystray
	    [ $XDG_SESSION_TYPE = "wayland" ] && sudo dnf install gtk-layer-shell grim
            pipx ensurepath && \
            pipx install git+https://github.com/AlfredoSequeida/hints.git
	    git clone https://github.com/rvaiya/warpd.git
     	    cd warpd
	    make -j4 && sudo make install
            ;;
        "Alpine")
            apk add build-base libx11-dev libxft-dev libxinerama-dev xorg-server xinit
            ;;
        "Slackware")
            slackpkg install gcc make autoconf automake libX11 libXft libXinerama xorg-server xinit
            ;;
        "OpenBSD")
            pkg_add gmake autoconf automake libX11 libXft libXinerama xorg-server xinit
            ;;
        "FreeBSD")
            sudo pkg install gcc gmake autoconf automake libX11 libXft libXinerama xorg-server xorg-xinit
            ;;
        "Void")
            sudo xbps-install -S base-devel libX11-devel libXft-devel libXinerama-devel xorg-server xorg-xinit
            ;;
        "NixOS")
            nix-env -iA nixos.gcc nixos.gnumake nixos.autoconf nixos.automake nixos.libX11 nixos.libXft nixos.libXinerama nixos.xorg.xorgserver nixos.xorg.xinit
            ;;
        "openSUSE")
            sudo zypper install -t pattern devel_basis && sudo zypper install libX11-devel libXft-devel libXinerama-devel xorg-x11-server xorg-x11-xinit
            ;;
	"Arch")
	    
            sudo pacman -S base-devel libx11 libxft libxinerama xorg-server xorg-xinit git python cairo pkgconf gobject-introspection gtk4 python-pipx pasystray dunst 7z nitrogen lf xsel mpv cmus nmtui glances brightnessctl rxvt-unicode rofi dmenu slock newsboat vim gtk-layer-shell grim libwnck3 beets yajl freetype2
	    yay -S warpd dmenufm emojimenu bluetuith bmon bandwhich clipse dmenu-frecency aerc kpmenu pulsemixer
            [ $XDG_SESSION_TYPE = "x11" ]
	    pipx ensurepath && \
	    pipx install git+https://github.com/AlfredoSequeida/hints.git
            ;;
        *)
            echo "Unsupported distribution or package manager."
            exit 1
            ;;
    esac
}

case "$1" in

    -g) 
        exec $LABYRGAL $2 &
        ;;

    -m)
        exec $LABYRMU $2 & 
        ;;

    -mr) 

        exec $MUREMOTE $2 &
        ;;

    -dv)
        exec $LABYRTERM2 $MUDL &
        ;;

    -e)
        exec $LABYREDIT $2 &
        ;;

    -E)

        exec $LABYRTERM -e $2 &
        ;;

    -t)
        exec $LABYRTERM $2 &
        ;;

    -w)
        exec $LABYRWAL $2 &
        ;;

    -b)
        exec $LABYRWEB $2 &
        ;;

    -M)
        notify-send $LABYRMODE
        ;;

    -se)
	MENU="dmenu"
	
	FILE="$WIDIR/.xt/.urlquery"
	
	if [ ! -f $FILE ]; then
	    touch $FILE
	fi
	
	FILEOPT=$(cat $FILE)
	
	OPTIONS="
	[
	${FILEOPT}
	[ \"+\", \"\" ],
	[ \"-\",  \"\" ]
	]
	"
	
	OBJ_LENGTH=$(echo $OPTIONS | jq length)
	OBJ_MENU=$(echo $OPTIONS | jq -r ".[][0]" | $MENU -i -nb black -nf white -sb white -sf black -p "::search")
	OBJ_SELECTED=$(echo $OBJ_MENU | cut -d' ' -f1)
	OBJ_KEYWORDS=$(echo $OBJ_MENU | cut -d' ' -f2- | tr " " "+")
	
	add_query() {
	    PREFIXMENU=$(echo "" | dmenu -nb black -nf white -sb white -sf black -p "Add prefix menu:" <&-)
	    if [ ! -z $PREFIXMENU ]; then
	        URLQUERY=$(echo "" | dmenu -p -nb black -nf white -sb white -sf black "Add url query:" <&-)
	        echo "[ \"$PREFIXMENU\", \"$URLQUERY\" ]," >> $FILE
	    fi
	    exit
	}
	
	delete_query() {
	    OBJ_MENU=$(echo $OPTIONS | jq -r ".[][0]" | head -n -2 | $MENU -i -p "Delete Menu:")
	    OBJ_SELECTED=$OBJ_MENU
	    if [ ! -z $OBJ_SELECTED ]; then
	        CONFIRM_DELETE=$(echo -e "no\nyes" | dmenu -nb black -nf white -sb white -sf black -p "Do you want to delete this url?")
	        if [ $CONFIRM_DELETE = "yes" ]; then
	            sed -i "/$OBJ_SELECTED/d" $FILE
	        fi
	    fi
	    exit
	}
	
	main() {
	    for i in $(seq 0 $((OBJ_LENGTH - 1))); do
	        if [ $OBJ_SELECTED = "+" ]; then
	            add_query
	        fi
	
	        if [ $OBJ_SELECTED = "-" ]; then
	            delete_query
	        fi
		
	        if [ $OBJ_SELECTED = $(echo $OPTIONS | jq -r --arg i $i '.[($i|tonumber)][0]') ]; then
	            URLQUERY=$(echo $OPTIONS | jq -r --arg i $i '.[($i|tonumber)][1]')
	            KEYWORDS=$(echo $OBJ_KEYWORDS)
	            $LABYRWEB "${URLQUERY}${KEYWORDS}" 2> /dev/null
	        fi
	    done
	}
	
	main
	;;

    -sf)
	
        shotgun - | xclip -selection clipboard -t image/png
        filename=${filename:-$(date +%s)} && \
        mkdir -p $WIDIR/.rec/img/
        shotgun $WIDIR/.rec/img/"$filename.png"
        ;;

    -ss)

        selection=$(hacksaw -f "-i %i -g %g")
        shotgun $selection - | xclip -selection clipboard -t image/png
        filename=${filename:-$(date +%s)} && \
        mkdir -p $WIDIR/.rec/img
        shotgun $selection $WIDIR/.rec/img/"$filename.png"

        ;;


   -sv)

    	dir=$WIDIR/.rec/vi
    	current=$(date +%F_%H-%M-%S)
    	
    	mkdir -p "$dir"
    	hacksaw | {
    	    IFS=+x read -r w h x y
    	
    	    w=$((w + w % 2))
    	    h=$((h + h % 2))
    	
    	    $LABYRTERM -e ffmpeg \
    	        -v 16            \
    	        -r 30            \
    	        -f x11grab       \
                -s "${w}x${h}"   \
    	        -i ":0.0+$x,$y"  \
    	        -preset slow     \
    	        -c:v h264        \
    	        -pix_fmt yuv420p \
    	        -crf 20          \
    	        -f pulse -i default \
    	        "$dir/$current.mp4" & \
		
    		}
	;;

   -ar)

   	   directory=$WIDIR/.rec/au
   	   date=$(date +%F_%H-%M-%S)
           $LABYRTERM -e ffmpeg -f alsa -i default "$directory/$date".wav

    	;;
   
   -bk) # probably dont run this, yet...
         sudo cp -rv /.local/bin/labyrtool $WIDIR/.yr/
         sudo cp -rv /.local/bin/labyrinth $WIDIR/.yr/
	 cp -rv ~/.config/sxhkd/* $WIDIR/.xk/
	 cp -rv ~/.config/warpd/config $WIDIR/.xt/
	 cp -rv ~/.config/hints/config.json $WIDIR/.xt/config.hints.json
	 cp -rv ~/.config/dunst/dunstrc $WIDIR/.xt/
	 cp -rv ~/.config/polybar/config.ini $WIDIR/.xt/polybar.config.ini
	 cp -rv ~/.local/bin/foxtag $WIDIR/.xt/
	 cp -rv ~/.config/dmenu-frecency/config.json $WIDIR/.xt/dmenu-frecency.config.json
	 cp -rv ~/.config/polybar/config.ini $WIDIR/.xt/polybar.config.ini 
	 cp -rv ~/.Xresources $WIDIR/.xt/
	 sudo cp -rv /usr/share/dwmbar/ $WIDIR/.xt/
	;;


  -ubk)  # dont run this either... yet.
         wideps $2
	 sudo cp -rv $WIDIR/.yr/labyrinth ~/.local/bin/
	 sudo cp -rv $WIDIR/.yr/labyrtool ~/.local/bin/
	 sudo cp -rv $WIDIR/.xt/dwmbar /usr/share/
	 mkdir -p ~/.config/polybar/
	 cp -rv $WIDIR/.xt/ ~/.config/polybar/config.ini
	 mkdir -p ~/.config/dmenu-frecency/
	 cp -rv $WIDIR/.xt/dmenu-frecency.config.json ~/.config/dmenu-frecency/config.json
	 #cp -rv $WIDIR/.xt/zshrc ~/.zshrc 
	 #^replace with alias file that is then sourced by zshrc
	 mkdir -p ~/.config/dunst/
	 cp -rv $WIDIR/.xt/dunstrc ~/.config/dunst/
	 mkdir -p ~/.config/hints/
	 cp -rv $WIDIR/.xt/config.hints.json ~/.config/hints/config.json
	 mkdir -p ~/.config/warpd/
	 cp -rv $WIDIR/.xt/config ~/.config/warpd/
	 cp -rv $WIDIR/.xk/* ~/.config/sxhkd/
	 mkdir -p ~/.config/lf/
	 cp -rv $WIDIR/.xt/.lf/* ~/.config/lf/
	 cp -rv $WIDIR/.xt/foxtag ~/.local/bin/
         ;;

   --edit)
        
       vim ~/.local/bin/labyrtool

       ;;

	
esac 
